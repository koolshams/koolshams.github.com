{"version":3,"sources":["modules/dashboard/redux/dashboard-reducer.ts","modules/dashboard/redux/dashboard-constants.ts","modules/common/redux/reducer-helper.ts","redux-config.ts","modules/login/login-schema.ts","modules/common/components/form-elements/text-field/text-field.tsx","modules/login/login-page.tsx","modules/common/components/header/header.tsx","modules/dashboard/tab-form-modal.tsx","modules/dashboard/components/tab-menu/tab-menu.tsx","modules/common/components/confirm-modal/confirm-modal.tsx","modules/dashboard/widgets/performance-widget.tsx","modules/dashboard/dashboard-page.tsx","modules/dashboard/redux/dashboard-actions.ts","modules/dashboard/widgets/widget-base.tsx","manage.tsx","app.tsx","index.tsx"],"names":["WidgetTypes","DASHBOARD_TAB_ADD","DASHBOARD_TAB_DELETE","DASHBOARD_TAB_EDIT","DASHBOARD_WIDGET_ADD","DASHBOARD_WIDGET_DELETE","DASHBOARD_WIDGET_EDIT","removeElement","state","items","id","key","deleteIndex","findIndex","item","Object","objectSpread","defineProperty","concat","toConsumableArray","slice","updateElement","itemToUpdate","editIndex","initialState","tabs","widgets","dashboard","arguments","length","undefined","action","type","constants","payload","logger","createLogger","history","createBrowserHistory","LoginSchema","Yup","shape","password","min","max","required","email","TextField","_ref","name","title","placeholder","error","touched","autoComplete","react_default","a","createElement","className","formik_esm","classNames","is-valid","is-invalid","LoginPageBase","isInitialValid","initialValues","validationSchema","onSubmit","this","props","onLogin","errors","text_field_TextField","React","Component","LoginPage","connect","dispatch","push","Header","react_router_dom","to","href","TabFormModal","open","close","currentValue","formRef","useRef","Modal","isOpen","toggle","ModalHeader","ModalBody","ref","node","current","validate","values","tab","_ref2","ModalFooter","Button","color","onClick","submitForm","TabMenu","onEdit","onDelete","_useState","useState","_useState2","slicedToArray","menuVisible","setMenuVisible","Dropdown","DropdownToggle","tag","caret","DropdownMenu","DropdownItem","ConfirmModal","message","onClose","onYes","options","chart","width","height","text","series","data","credits","enabled","PerformanceWidget","highcharts_react_min_default","highcharts","Highcharts","preloadedState","historyObject","DashboardPage","onAddTab","onDeleteTab","tabId","onEditTab","onAddWidget","widget","onEditWidget","onDeleteWidget","widgetId","activeTab","setActiveTab","_useState3","_useState4","showAddForm","setShowAddForm","_useState5","_useState6","tabToDelete","setTabToDelete","_useState7","_useState8","tabToEdit","setTabToEdit","_useState9","_useState10","currentWidgets","setCurrentWidgets","_useState11","_useState12","resizable","setResizable","useEffect","find","filter","w","Nav","map","NavItem","NavLink","active","tab_menu_TabMenu","size","PERFORMANCE","uniqid","position","x","y","h","TabContent","TabPane","Row","Col","sm","react_grid_layout_default","containerPadding","draggableHandle","cols","rowHeight","window","innerWidth","isResizable","isDraggable","data-grid","onMouseDown","evt","stopPropagation","performance_widget_PerformanceWidget","constructWidget","tab_form_modal_TabFormModal","confirm_modal_ConfirmModal","Manage","Fragment","header_Header","react_router","path","exact","component","store","createStore","combineReducers","router","connectRouter","storeReducer","compose","applyMiddleware","routerMiddleware","thunk","App","es","esm","ReactDOM","render","react","app","document","getElementById"],"mappings":"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","file":"static/js/main.d4760356.chunk.js","sourcesContent":["import { Action } from 'redux';\nimport * as constants from './dashboard-constants';\nimport {\n  removeElement,\n  updateElement,\n} from '../../common/redux/reducer-helper';\n\nexport interface Tab {\n  id: string;\n  name: string;\n}\n\nexport enum WidgetTypes {\n  PERFORMANCE = 'PERFORMANCE',\n}\n\nexport interface Widget {\n  id: string;\n  tabId: string;\n  type: WidgetTypes;\n  title: string;\n  position: {\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n  };\n  props: any;\n}\n\nexport interface DashboardState {\n  tabs: Tab[];\n  widgets: Widget[];\n}\n\nexport interface DasboardAction extends Action<keyof typeof constants> {\n  payload: any;\n}\n\nconst initialState: DashboardState = {\n  tabs: [],\n  widgets: [],\n};\n\nexport function dashboard(\n  state = initialState,\n  action: DasboardAction,\n): DashboardState {\n  switch (action.type) {\n    case constants.DASHBOARD_TAB_ADD:\n      return {\n        ...state,\n        tabs: [...state.tabs, action.payload],\n      };\n    case constants.DASHBOARD_TAB_DELETE:\n      return removeElement<DashboardState>(\n        state,\n        state.tabs,\n        action.payload,\n        'tabs',\n      );\n\n    case constants.DASHBOARD_TAB_EDIT:\n      return updateElement<DashboardState>(\n        state,\n        state.tabs,\n        action.payload as Tab,\n        'tabs',\n      );\n\n    case constants.DASHBOARD_WIDGET_ADD:\n      return {\n        ...state,\n        widgets: [...state.widgets, action.payload],\n      };\n\n    case constants.DASHBOARD_WIDGET_DELETE:\n      return removeElement<DashboardState>(\n        state,\n        state.widgets,\n        action.payload,\n        'widgets',\n      );\n\n    case constants.DASHBOARD_WIDGET_EDIT:\n      return updateElement<DashboardState>(\n        state,\n        state.widgets,\n        action.payload,\n        'widgets',\n      );\n\n    default:\n      return state;\n  }\n}\n","export const DASHBOARD_TAB_ADD = 'DASHBOARD_TAB_ADD';\nexport const DASHBOARD_TAB_DELETE = 'DASHBOARD_TAB_DELETE';\nexport const DASHBOARD_TAB_EDIT = 'DASHBOARD_TAB_EDIT';\n\nexport const DASHBOARD_WIDGET_ADD = 'DASHBOARD_WIDGET_ADD';\nexport const DASHBOARD_WIDGET_DELETE = 'DASHBOARD_WIDGET_DELETE';\nexport const DASHBOARD_WIDGET_EDIT = 'DASHBOARD_WIDGET_EDIT';\n","interface IdObj {\n  id: string;\n}\n\nexport function removeElement<T>(\n  state: T,\n  items: IdObj[],\n  id: string,\n  key: string,\n): T {\n  const deleteIndex = items.findIndex(item => item.id === id);\n  if (deleteIndex === -1) {\n    return state;\n  }\n  return {\n    ...state,\n    [key]: [...items.slice(0, deleteIndex), ...items.slice(deleteIndex + 1)],\n  } as T;\n}\n\nexport function updateElement<T>(\n  state: T,\n  items: IdObj[],\n  itemToUpdate: IdObj,\n  key: string,\n) {\n  const editIndex = items.findIndex(item => item.id === itemToUpdate.id);\n  return {\n    ...state,\n    [key]: [\n      ...items.slice(0, editIndex),\n      itemToUpdate,\n      ...items.slice(editIndex + 1),\n    ],\n  } as T;\n}\n","import { connectRouter, routerMiddleware, RouterState } from 'connected-react-router';\nimport { createBrowserHistory, History } from 'history';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { dashboard, DashboardState } from './modules/dashboard/redux/dashboard-reducer';\n\nexport interface StoreState {\n  router: RouterState,\n  dashboard: DashboardState\n}\n\nfunction storeReducer(historyObject: History<any>) {\n  return combineReducers({\n    dashboard,\n    router: connectRouter(historyObject),\n  });\n}\n\nconst logger = createLogger({});\n\nexport const history = createBrowserHistory();\n\nexport function configureStore(preloadedState: any, historyObject: History<any>) {\n  const store = createStore(\n    storeReducer(historyObject),\n    preloadedState,\n    compose(\n      applyMiddleware(routerMiddleware(history)),\n      applyMiddleware(thunk),\n      applyMiddleware(logger),\n    ),\n  );\n\n  return store;\n}\n","import * as Yup from 'yup';\n\nexport const LoginSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n});\n","import { Field } from 'formik';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { FieldProps } from '../interfaces/field-props';\n\nexport const TextField: React.FC<FieldProps> = ({\n  name,\n  title,\n  type,\n  placeholder,\n  error,\n  touched,\n  autoComplete\n}) => (\n  <div className=\"form-group\">\n    {title && <label>{title}</label>}\n    <Field\n      name={name}\n      type={type}\n      className={classNames('form-control', {\n        'is-valid': touched && !error,\n        'is-invalid': touched && !!error,\n      })}\n      placeholder={placeholder}\n      autoComplete={autoComplete}\n    />\n    {error && touched ? <div className=\"invalid-feedback\">{error}</div> : null}\n  </div>\n);\n","import { Formik, Form } from 'formik';\nimport React from 'react';\n\nimport './login.scss';\nimport { LoginSchema } from './login-schema';\nimport { TextField } from '../common/components/form-elements/text-field/text-field';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nclass LoginPageBase extends React.Component<{ onLogin: () => void }> {\n  render() {\n    return (\n      <div className=\"login-page container content\">\n        <div className=\"login-page--box\">\n          <h2>Login Page</h2>\n          <Formik\n            isInitialValid={false}\n            initialValues={\n              {\n                email: '',\n                password: '',\n              }\n            }\n            validationSchema={LoginSchema}\n            onSubmit={this.props.onLogin}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <TextField\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  title=\"Email\"\n                  error={errors.email}\n                  touched={touched.email}\n                  autoComplete=\"username\"\n                />\n                <TextField\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  title=\"Password\"\n                  error={errors.password}\n                  touched={touched.password}\n                  autoComplete=\"current-password\"\n                />\n                <button type=\"submit\" className=\"btn btn-primary mb-2\">\n                  Login\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LoginPage = connect(\n  null,\n  dispatch => ({\n    onLogin: () => dispatch(push('/manage')),\n  }),\n)(LoginPageBase);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Header = () => (\n    <nav className=\"header navbar navbar-expand-md navbar-light bg-faded\">\n        <div className=\"container-fluid\">\n            <Link className=\"mr-auto navbar-brand\" to=\"/manage\">Dashboard App</Link>\n            <button type=\"button\" className=\"navbar-toggler\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            \n            <div className=\"collapse navbar-collapse\">\n                <ul className=\"ml-sm-auto navbar-nav\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link active\" href=\"/components/\">Components</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/\">Logout</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n);\n","import React, { useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Formik, Form } from 'formik';\nimport { TextField } from '../common/components/form-elements/text-field/text-field';\n\ninterface FormType  {\n  name: string\n}\n\nexport interface TabFormModalProps {\n  open: boolean;\n  close: () => void;\n  currentValue?: FormType;\n  onSubmit: (tab: FormType) => void;\n  title: string;\n}\n\nexport const TabFormModal = ({\n  open,\n  close,\n  currentValue,\n  title,\n  onSubmit,\n}: TabFormModalProps) => {\n  const formRef: React.MutableRefObject<null | any> = useRef(null);\n  return (\n    <Modal isOpen={open} toggle={close}>\n      <ModalHeader toggle={close}>\n        {title}\n      </ModalHeader>\n      <ModalBody>\n        <Formik\n          isInitialValid={false}\n          ref={node => {\n            formRef.current = node as any;\n          }}\n          initialValues={{\n            name: currentValue ? currentValue.name : '',\n          }}\n          validate={values => {\n            let errors: { name?: string } = {};\n            if (!values.name) {\n              errors.name = 'Required';\n            }\n            return errors;\n          }}\n          onSubmit={values => {\n            const tab = {\n              name: values.name,\n            };\n            onSubmit(tab);\n          }}\n        >\n          {({ errors, touched }) => (\n            <Form>\n              <TextField\n                title=\"Name\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                error={errors.name}\n                touched={touched.name}\n              />\n            </Form>\n          )}\n        </Formik>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          color=\"primary\"\n          onClick={() => {\n            if (formRef.current) {\n              formRef.current.submitForm();\n            }\n          }}\n        >\n          Save\n        </Button>{' '}\n        <Button color=\"secondary\" onClick={close}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport { Tab } from '../../redux/dashboard-reducer';\n\nimport './tab-menu.scss';\n\nexport interface TabMenuProps {\n  onDelete: (tab: Tab) => void;\n  onEdit: (tab: Tab) => void;\n  tab: Tab;\n}\n\nexport const TabMenu: React.FC<TabMenuProps> = ({\n  tab,\n  onEdit,\n  onDelete,\n}) => {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  return (\n    <Dropdown className=\"tab-menu\" isOpen={menuVisible} toggle={() => setMenuVisible(!menuVisible)}>\n      <DropdownToggle tag=\"span\" caret>\n        {' '}\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem\n          onClick={() => {\n            onEdit(tab);\n            setMenuVisible(false);\n          }}\n        >\n          Edit\n        </DropdownItem>\n        <DropdownItem\n          onClick={() => {\n            onDelete(tab);\n            setMenuVisible(false);\n          }}\n        >\n          Delete\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport interface ConfirmModalProps {\n  open: boolean;\n  title: string;\n  message: string;\n  onClose: () => void;\n  onYes: () => void;\n}\n\nexport const ConfirmModal: React.FC<ConfirmModalProps> = ({\n  open,\n  title,\n  message,\n  onClose,\n  onYes,\n}) => {\n  return (\n    <Modal isOpen={open} toggle={onClose}>\n      <ModalHeader toggle={onClose}>{title}</ModalHeader>\n      <ModalBody>\n        <p>{message}</p>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={onYes}>\n          Save\n        </Button>{' '}\n        <Button color=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\ninterface PerformanceWidgetProps {\n  title: string;\n  props: any;\n}\n\nconst options = {\n  chart: {\n    width: 400,\n    height: 200\n  },\n  title: {\n    text: 'My chart',\n  },\n  series: [\n    {\n      data: [1, 2, 3],\n    },\n  ],\n  credits: {\n    enabled: false,\n  }\n};\n\nexport const PerformanceWidget: React.FC<PerformanceWidgetProps> = ({\n  title,\n}) => {\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={options as any} />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport uniqid from 'uniqid';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  Button,\n} from 'reactstrap';\nimport { TabFormModal } from './tab-form-modal';\nimport { Tab, Widget, WidgetTypes } from './redux/dashboard-reducer';\nimport { connect } from 'react-redux';\nimport { StoreState } from '../../redux-config';\nimport {\n  addTab,\n  removeTab,\n  editTab,\n  addWidget,\n  editWidget,\n  removeWidget,\n} from './redux/dashboard-actions';\nimport { TabMenu } from './components/tab-menu/tab-menu';\nimport { ConfirmModal } from '../common/components/confirm-modal/confirm-modal';\nimport GridLayout from 'react-grid-layout';\n\nimport 'react-resizable/css/styles.css';\nimport './dashboard.scss';\nimport { constructWidget } from './widgets/widget-base';\n\ninterface StateProps {\n  tabs: Tab[];\n  widgets: Widget[];\n}\n\ninterface DispatchProps {\n  onAddTab: (tab: Tab) => void;\n  onEditTab: (tab: Tab) => void;\n  onDeleteTab: (tabId: string) => void;\n  onAddWidget: (widget: Widget) => void;\n  onEditWidget: (widget: Widget) => void;\n  onDeleteWidget: (widgetId: string) => void;\n}\n\ninterface DashboardProps extends StateProps, DispatchProps {}\n\nfunction addWidgetHelper(\n  type: WidgetTypes,\n  tabId: string,\n  addWidget: (widget: Widget) => void,\n) {\n  const widget: Widget = {\n    tabId,\n    id: uniqid(),\n    title: 'Hello',\n    type: type,\n    position: {\n      x: 0,\n      y: 0,\n      w: 8,\n      h: 8,\n    },\n    props: {},\n  };\n  addWidget(widget);\n}\n\nconst Dashboard: React.FC<DashboardProps> = ({\n  tabs,\n  widgets,\n  onAddTab,\n  onEditTab,\n  onDeleteTab,\n  onAddWidget\n}) => {\n  const [activeTab, setActiveTab] = useState('');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [tabToDelete, setTabToDelete] = useState<null | Tab>(null);\n  const [tabToEdit, setTabToEdit] = useState<null | Tab>(null);\n  const [currentWidgets, setCurrentWidgets] = useState<Widget[]>([]);\n  const [resizable, setResizable] = useState(false);\n\n  useEffect(() => {\n    if (!tabs.find(tab => tab.id === activeTab) && tabs.length > 0) {\n      setActiveTab(tabs[0].id);\n    }\n  }, [tabs, activeTab]);\n\n  useEffect(() => {\n    setCurrentWidgets(widgets.filter(w => w.tabId === activeTab));\n  }, [widgets, activeTab]);\n\n  return (\n    <div className=\"dashboard-page\">\n      <Nav tabs className=\"dashboard-page--tab-header\">\n        {tabs.map(tab => (\n          <NavItem key={tab.id}>\n            <NavLink\n              className={classNames({ active: activeTab === tab.id })}\n              onClick={() => {\n                setActiveTab(tab.id);\n              }}\n            >\n              {tab.name}{' '}\n              <TabMenu\n                tab={tab}\n                onDelete={tab => {\n                  setTabToDelete(tab);\n                }}\n                onEdit={tab => {\n                  setTabToEdit(tab);\n                }}\n              />\n            </NavLink>\n          </NavItem>\n        ))}\n        <NavItem>\n          <NavLink\n            onClick={() => {\n              setShowAddForm(true);\n            }}\n          >\n            +\n          </NavLink>\n        </NavItem>\n        {activeTab && (\n          <NavItem className=\"dashboard-page--tab-actions\">\n            <Button\n              color=\"light\"\n              size=\"sm\"\n              className={classNames({\n                active: resizable,\n              })}\n              onClick={() => setResizable(!resizable)}\n            >\n              <i className=\"fas fa-expand-arrows-alt\" />\n            </Button>{' '}\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                addWidgetHelper(\n                  WidgetTypes.PERFORMANCE,\n                  activeTab,\n                  onAddWidget,\n                );\n              }}\n            >\n              Add Widget\n            </Button>\n          </NavItem>\n        )}\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        {tabs.map(tab => (\n          <TabPane tabId={tab.id} key={tab.id}>\n            <Row>\n              <Col sm=\"12\">\n                {activeTab === tab.id && (\n                  <GridLayout\n                    containerPadding={[15, 15]}\n                    draggableHandle=\".card-title\"\n                    cols={24}\n                    rowHeight={30}\n                    width={window.innerWidth - 50}\n                    isResizable={resizable}\n                    isDraggable={resizable}\n                  >\n                    {currentWidgets.map(widget => constructWidget(widget))}\n                  </GridLayout>\n                )}\n              </Col>\n            </Row>\n          </TabPane>\n        ))}\n      </TabContent>\n      <TabFormModal\n        title=\"Add Tab\"\n        onSubmit={values => {\n          onAddTab({\n            ...values,\n            id: uniqid(),\n          });\n          setShowAddForm(false);\n        }}\n        open={showAddForm}\n        close={() => setShowAddForm(false)}\n      />\n      {tabToDelete && (\n        <ConfirmModal\n          onYes={() => {\n            onDeleteTab(tabToDelete.id);\n            setTabToDelete(null);\n          }}\n          onClose={() => {\n            setTabToDelete(null);\n          }}\n          open={!!tabToDelete}\n          title=\"Warning!!\"\n          message={`Are you sure to delete this tab: '${tabToDelete.name}'`}\n        />\n      )}\n      {tabToEdit && (\n        <TabFormModal\n          title={'Edit Tab'}\n          onSubmit={values => {\n            onEditTab({\n              id: tabToEdit.id,\n              ...values,\n            });\n            setTabToEdit(null);\n          }}\n          currentValue={tabToEdit}\n          open={!!tabToEdit}\n          close={() => setTabToEdit(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport const DashboardPage = connect<StateProps, DispatchProps, {}, StoreState>(\n  state => ({\n    tabs: state.dashboard.tabs,\n    widgets: state.dashboard.widgets,\n  }),\n  {\n    onAddTab: addTab,\n    onDeleteTab: removeTab,\n    onEditTab: editTab,\n    onAddWidget: addWidget,\n    onEditWidget: editWidget,\n    onDeleteWidget: removeWidget,\n  },\n)(Dashboard);\n","import { Tab, Widget } from './dashboard-reducer';\nimport {\n  DASHBOARD_TAB_ADD,\n  DASHBOARD_TAB_DELETE,\n  DASHBOARD_TAB_EDIT,\n  DASHBOARD_WIDGET_ADD,\n  DASHBOARD_WIDGET_DELETE,\n  DASHBOARD_WIDGET_EDIT,\n} from './dashboard-constants';\n\nexport const addTab = (tab: Tab) => ({\n  type: DASHBOARD_TAB_ADD,\n  payload: tab,\n});\n\nexport const removeTab = (tabId: string) => ({\n  type: DASHBOARD_TAB_DELETE,\n  payload: tabId,\n});\n\nexport const editTab = (tab: Tab) => ({\n  type: DASHBOARD_TAB_EDIT,\n  payload: tab,\n});\n\nexport const addWidget = (widget: Widget) => ({\n  type: DASHBOARD_WIDGET_ADD,\n  payload: widget,\n});\n\nexport const removeWidget = (widgetId: string) => ({\n  type: DASHBOARD_WIDGET_DELETE,\n  payload: widgetId,\n});\n\nexport const editWidget= (widget: Widget) => ({\n  type: DASHBOARD_WIDGET_EDIT,\n  payload: widget,\n});\n","import React from 'react';\nimport { Widget, WidgetTypes } from '../redux/dashboard-reducer';\nimport { Button } from 'reactstrap';\nimport { PerformanceWidget } from './performance-widget';\n\nexport function constructWidget(widget: Widget) {\n  return (\n    <div className=\"card\" key={widget.id} data-grid={widget.position}>\n      <h5 className=\"card-title\">\n        {widget.title}{' '}\n        <Button\n          color=\"light\"\n          size=\"xs\"\n          className=\"float-right\"\n          onMouseDown={evt => evt.stopPropagation()}\n        >\n          <i className=\"fas fa-cog\" />\n        </Button>\n      </h5>\n      <div className=\"card-body\">\n        {widget.type === WidgetTypes.PERFORMANCE && (\n          <PerformanceWidget title={widget.title} props={widget.props} />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Header } from './modules/common/components/header/header';\nimport { Switch, Route } from 'react-router';\nimport { DashboardPage } from './modules/dashboard/dashboard-page';\n\nexport const Manage = () => (\n    <>\n        <Header/>\n        <div className=\"content container-fluid\">\n            <Switch>\n                <Route path=\"/manage\" exact={true} component={DashboardPage}/>\n            </Switch>\n        </div>\n    </>\n)","import { ConnectedRouter } from 'connected-react-router';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\n\nimport { configureStore, history } from './redux-config';\nimport { LoginPage } from './modules/login/login-page';\nimport { Manage } from './manage';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport './global.scss';\n\nconst store = configureStore({}, history);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Switch>\n          <Route exact={true} path=\"/\" component={LoginPage} />\n          <Route path=\"/manage\" component={Manage}/>\n        </Switch>\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}